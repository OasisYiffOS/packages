# Package Maintainers
MAINTAINERS=("Helix Graziani <helix.graziani@hotmail.com>")

# Package information
NAME="openssh"
VERSION="9.2p1"
EPOCH=0
DESC="Utilities and servers for secure shell connections"
GRPS=()
URL="https://www.openssh.com/"
LICENSES=("BSD")
DEPENDS=("glibc" "pam" "openssl" "zlib" "libedit" "krb5" "libxcrypt")
OPT_DEPENDS=("x11-xauth")
MK_DEPENDS=("which")
PROVIDES=("openssh")
CONFLICTS=()
REPLACES=()

# Source information
SRC=("https://ftp.openbsd.org/pub/OpenBSD/OpenSSH/portable/openssh-${VERSION}.tar.gz"
"sysusers")

SUM_TYPE="sha512"
SUM=("c4b79ef3a05b96bfc477ffb31f734635bffd5be213ab58e043111c3232dbe999ff24665fa1069518237cffa5126ded0dda8984e1b8f098f4f09b8c1dae20e604"
"f2720d7dc98586c2768e656e54e80e98d8a0bf1d0dd6e653e6576c6f5550f155f180ab7d0099fb50d35e98eabb6b95da8769f49bf5c1897dc62605fc2842fd30")

# Prepare script
function prepare() {
    cd "${WORKDIR}/${NAME}-${VERSION}"

    ./configure --prefix=/usr                            \
                --sysconfdir=/etc/ssh                    \
                --with-privsep-path=/var/lib/sshd        \
                --with-default-path=/usr/bin             \
                --with-superuser-path=/usr/sbin:/usr/bin \
                --with-pam                               \
                --with-pid-dir=/run			 \
                --with-libedit				 \
                --with-xauth=/usr/bin/xauth		 \
                --with-kerberos5=/usr

    return 0
}

# Build script
function build() {
    cd "${WORKDIR}/${NAME}-${VERSION}"

    make

    # Tests only work with a single job
    make -j1 tests

    return 0
}

# Post build script
function postbuild() {
    cd "${WORKDIR}/${NAME}-${VERSION}"

    install  -v -m700 -d ${BUILD_DATA_ROOT}/var/lib/sshd
    chown    -v root:sys ${BUILD_DATA_ROOT}/var/lib/sshd

    make DESTDIR="${BUILD_DATA_ROOT}" install

    install -v -m755    contrib/ssh-copy-id ${BUILD_DATA_ROOT}/usr/bin

    install -v -m644    contrib/ssh-copy-id.1                   \
                        ${BUILD_DATA_ROOT}/usr/share/man/man1/ssh-copy-id.1

    install -v -m755 -d ${BUILD_DATA_ROOT}/usr/share/doc/openssh-${VERSION}

    install -v -m644    INSTALL LICENCE OVERVIEW README*                \
                        ${BUILD_DATA_ROOT}/usr/share/doc/openssh-${VERSION}

    echo "UsePAM yes" >> ${BUILD_DATA_ROOT}/etc/ssh/sshd_config

    mkdir -pv ${BUILD_DATA_ROOT}/etc/pam.d

cat > ${BUILD_DATA_ROOT}/etc/pam.d/sshd << "EOF"
# Begin /etc/pam.d/sshd
# WARNING: THIS FILE GETS OVERWRITTEN ON UPDATE

# Set failure delay before next prompt to 3 seconds
auth      optional    pam_faildelay.so  delay=3000000

# Check to make sure that the user is allowed to login
auth      requisite   pam_nologin.so

# Check to make sure that root is allowed to login
# Disabled by default. You will need to create /etc/securetty
# file for this module to function. See man 5 securetty.
#auth      required    pam_securetty.so

# Additional group memberships - disabled by default
#auth      optional    pam_group.so

# include system auth settings
auth      include     system-auth

# check access for the user
account   required    pam_access.so

# include system account settings
account   include     system-account

# Set default environment variables for the user
session   required    pam_env.so

# Set resource limits for the user
session   required    pam_limits.so

# Display date of last login - Disabled by default
session   optional    pam_lastlog.so

# Display the message of the day - Disabled by default
session   optional    pam_motd.so

# Check user's mail - Disabled by default
#session   optional    pam_mail.so      standard quiet

# include system session and password settings
session   include     system-session
password  include     system-password

# End /etc/pam.d/sshd
EOF

    chmod 644 ${BUILD_DATA_ROOT}/etc/pam.d/sshd
    
    mkdir -pv ${BUILD_DATA_ROOT}/usr/lib/systemd/system/

cat > ${BUILD_DATA_ROOT}/usr/lib/systemd/system/sshd.service << "EOF"
[Unit]
Description=OpenSSH Daemon

[Service]
ExecStart=/usr/sbin/sshd -D
ExecReload=/bin/kill -HUP $MAINPID
KillMode=process
Restart=always

[Install]
WantedBy=multi-user.target

EOF

    install -m644 -D ${WORKDIR}/sysusers "${BUILD_DATA_ROOT}/usr/lib/sysusers.d/openssh.conf"

    return 0
}