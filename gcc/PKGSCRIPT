# Package Maintainers
MAINTAINERS=("Evie Viau <evie@eviee.gay>")

# Package information
NAME="gcc"
VERSION="11.2.0"
EPOCH=1
DESC="The GNU Compiler Collection, including C, C++, ObjC, Fortran, Ada, and Go"
GRPS=("devel")
URL="https://gcc.gnu.org/"
LICENSES=("GPL" "LGPL")
DEPENDS=("mpc" "flex")
OPT_DEPENDS=()
PROVIDES=("gcc" "gcc-libs"  "gcc-go")
CONFLICTS=("gcc-libs")
REPLACES=()

# Source information
SRC=("https://ftp.gnu.org/gnu/gcc/gcc-${VERSION}/gcc-${VERSION}.tar.xz")

SUM_TYPE="sha512"
SUM=("d53a0a966230895c54f01aea38696f818817b505f1e2bfa65e508753fcd01b2aedb4a61434f41f3a2ddbbd9f41384b96153c684ded3f0fa97c82758d9de5c7cf")

# Prepare script
function prepare() {
    cd "${WORKDIR}/${NAME}-${VERSION}"

    # Patch issue breaking libasan identified upstream
    sed -e '/static.*SIGSTKSZ/d'                                        \
        -e 's/return kAltStackSize/return SIGSTKSZ * 4/'                \
        -i libsanitizer/sanitizer_common/sanitizer_posix_libcdep.cpp

    # Ensure 64-bit libraries are installed into lib
    sed -e '/m64=/s/lib64/lib/' \
        -e '/m32=/s/m32=.*/m32=..\/lib32$(call if_multiarch,:i386-linux-gnu)/' \
        -i.orig gcc/config/i386/t-linux64

    # Fix an issue causing libstdc++ to fail
    sed 's/gnu++17/& -nostdinc++/' \
        -i libstdc++-v3/src/c++17/Makefile.in

    # Allow building with POSIX threads
    sed '/thread_header =/s/@.*@/gthr-posix.h/' \
        -i libgcc/Makefile.in libstdc++-v3/include/Makefile.in

    mkdir -v build
    cd       build

    ../configure                                            \
       --prefix=/usr                                       \
       --enable-multilib                                   \
       --with-multilib-list=m64,m32                        \
       --with-system-zlib                                  \
       --enable-cet=auto                                   \
       --enable-lto                                        \
       --enable-plugin                                     \
       --enable-shared                                     \
       --enable-threads=posix                              \
       --enable-languages=c,c++,d,fortran,go,objc,obj-c++

    return 0
}

# Build script
function build() {
    cd "${WORKDIR}/${NAME}-${VERSION}/build"

    make

    ulimit -s 32768
    make -k check || true
    
    ../contrib/test_summary
    echo "Please check if all tests passed."
    echo "102 unepxected failures are expected."
    read -s -n 1 -p "Press any key to continue . . ."

    return 0
}

# Post build script
function postbuild() {
    cd "${WORKDIR}/${NAME}-${VERSION}/build"

    DESTDIR="${BUILD_DATA_ROOT}" make install

    mkdir -pv ${BUILD_DATA_ROOT}/usr/share/gdb/auto-load/usr/lib
    mv -v ${BUILD_DATA_ROOT}/usr/lib/*gdb.py ${BUILD_DATA_ROOT}/usr/share/gdb/auto-load/usr/lib

    chown -v -R root:root                                                       \
        ${BUILD_DATA_ROOT}/usr/lib/gcc/*linux-gnu/${VERSION}/include{,-fixed}

    rm -rf ${BUILD_DATA_ROOT}/usr/lib/gcc/$(gcc -dumpmachine)/${VERSION}/include-fixed/bits/

    mkdir -pv ${BUILD_DATA_ROOT}/usr/lib
    ln -svr ${BUILD_DATA_ROOT}/usr/bin/cpp ${BUILD_DATA_ROOT}/usr/lib/cpp

    ln -v -sf gcc ${BUILD_DATA_ROOT}/usr/bin/cc
    install -v -dm755 ${BUILD_DATA_ROOT}/usr/lib/bfd-plugins
    ln -sfv ../../libexec/gcc/$(gcc -dumpmachine)/${VERSION}/liblto_plugin.so ${BUILD_DATA_ROOT}/usr/lib/bfd-plugins/

    # Rename go to gcc-go
    mv -v ${BUILD_DATA_ROOT}/usr/bin/go ${BUILD_DATA_ROOT}/usr/bin/gcc-go
    mv -v ${BUILD_DATA_ROOT}/usr/bin/gofmt ${BUILD_DATA_ROOT}/usr/bin/gcc-gofmt
    mv -v ${BUILD_DATA_ROOT}/usr/share/man/man1/go.1 ${BUILD_DATA_ROOT}/usr/share/man/man1/gcc-go.1

    return 0
}