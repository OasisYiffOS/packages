# Package Maintainers
MAINTAINERS=("Evie Viau <evie@uwueviee.live>")

# Package information
NAME="corefiles"
VERSION="0.2.0-dev"
EPOCH=0
DESC="Core yiffOS files."
GRPS=("base")
URL="https://yiffos.gay/index.php/Main_Page"
LICENSES=("Apache-2.0")
DEPENDS=()
OPT_DEPENDS=()
MK_DEPENDS=()
PROVIDES=("corefiles")
CONFLICTS=()
REPLACES=()

# Source information
SRC=()

SUM_TYPE="sha512"
SUM=()

# Prepare script
function prepare() {
    return 0
}

# Build script
function build() {
    return 0
}

# Post build script
function postbuild() {
    mkdir "${BUILD_DATA_ROOT}/etc"

    case $(uname -m) in
        i?86)   mkdir "${BUILD_DATA_ROOT}/lib"
                ln -sfv ld-linux.so.2 ${BUILD_DATA_ROOT}/lib/ld-lsb.so.3
        ;;
        x86_64) mkdir "${BUILD_DATA_ROOT}/lib64"
                ln -sfv ../lib/ld-linux-x86-64.so.2 ${BUILD_DATA_ROOT}/lib64
                ln -sfv ../lib/ld-linux-x86-64.so.2 ${BUILD_DATA_ROOT}/lib64/ld-lsb-x86-64.so.3
        ;;
    esac

    mkdir -p "${BUILD_DATA_ROOT}/proc/self"
    ln -sv /proc/self/mounts ${BUILD_DATA_ROOT}/etc/mtab

cat > ${BUILD_DATA_ROOT}/etc/hosts << EOF
127.0.0.1  localhost $(hostname)
::1        localhost
EOF

cat > ${BUILD_DATA_ROOT}/etc/passwd << "EOF"
root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/dev/null:/usr/bin/false
daemon:x:6:6:Daemon User:/dev/null:/usr/bin/false
messagebus:x:18:18:D-Bus Message Daemon User:/run/dbus:/usr/bin/false
systemd-journal-gateway:x:73:73:systemd Journal Gateway:/:/usr/bin/false
systemd-journal-remote:x:74:74:systemd Journal Remote:/:/usr/bin/false
systemd-journal-upload:x:75:75:systemd Journal Upload:/:/usr/bin/false
systemd-network:x:76:76:systemd Network Management:/:/usr/bin/false
systemd-resolve:x:77:77:systemd Resolver:/:/usr/bin/false
systemd-timesync:x:78:78:systemd Time Synchronization:/:/usr/bin/false
systemd-coredump:x:79:79:systemd Core Dumper:/:/usr/bin/false
uuidd:x:80:80:UUID Generation Daemon User:/dev/null:/usr/bin/false
systemd-oom:x:81:81:systemd Out Of Memory Daemon:/:/usr/bin/false
nobody:x:99:99:Unprivileged User:/dev/null:/usr/bin/false
EOF

cat > ${BUILD_DATA_ROOT}/etc/group << "EOF"
root:x:0:
bin:x:1:daemon
sys:x:2:
kmem:x:3:
tape:x:4:
tty:x:5:
daemon:x:6:
floppy:x:7:
disk:x:8:
lp:x:9:
dialout:x:10:
audio:x:11:
video:x:12:
utmp:x:13:
usb:x:14:
cdrom:x:15:
adm:x:16:
messagebus:x:18:
systemd-journal:x:23:
input:x:24:
mail:x:34:
kvm:x:61:
systemd-journal-gateway:x:73:
systemd-journal-remote:x:74:
systemd-journal-upload:x:75:
systemd-network:x:76:
systemd-resolve:x:77:
systemd-timesync:x:78:
systemd-coredump:x:79:
uuidd:x:80:
systemd-oom:x:81:
wheel:x:97:
nogroup:x:99:
users:x:999:
EOF

    mkdir -p "${BUILD_DATA_ROOT}/var/log/"
    touch ${BUILD_DATA_ROOT}/var/log/{btmp,lastlog,faillog,wtmp}
    chgrp -v utmp ${BUILD_DATA_ROOT}/var/log/lastlog
    chmod -v 664  ${BUILD_DATA_ROOT}/var/log/lastlog
    chmod -v 600  ${BUILD_DATA_ROOT}/var/log/btmp

cat > ${BUILD_DATA_ROOT}/etc/lsb-release << "EOF"
DISTRIB_ID="yiffOS"
DISTRIB_RELEASE="0.2.0-dev"
DISTRIB_CODENAME="Knot"
DISTRIB_DESCRIPTION="yiffOS"
EOF

cat > ${BUILD_DATA_ROOT}/etc/os-release << "EOF"
NAME="yiffOS"
VERSION="0.2.0-dev"
ID=yiffOS
PRETTY_NAME="yiffOS 0.2.0-dev"
VERSION_CODENAME="Knot"
EOF

cat > ${BUILD_DATA_ROOT}/etc/inputrc << "EOF"
# Begin /etc/inputrc
# Modified by Chris Lynn <roryo@roryo.dynup.net>

# Allow the command prompt to wrap to the next line
set horizontal-scroll-mode Off

# Enable 8bit input
set meta-flag On
set input-meta On

# Turns off 8th bit stripping
set convert-meta Off

# Keep the 8th bit for display
set output-meta On

# none, visible or audible
set bell-style none

# All of the following map the escape sequence of the value
# contained in the 1st argument to the readline specific functions
"\eOd": backward-word
"\eOc": forward-word

# for linux console
"\e[1~": beginning-of-line
"\e[4~": end-of-line
"\e[5~": beginning-of-history
"\e[6~": end-of-history
"\e[3~": delete-char
"\e[2~": quoted-insert

# for xterm
"\eOH": beginning-of-line
"\eOF": end-of-line

# for Konsole
"\e[H": beginning-of-line
"\e[F": end-of-line

# End /etc/inputrc
EOF

cat > ${BUILD_DATA_ROOT}/etc/shells << "EOF"
# Begin /etc/shells

/bin/sh
/bin/bash

# End /etc/shells
EOF

    return 0
}