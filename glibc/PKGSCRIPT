# Package Maintainers
MAINTAINERS=("Evie Viau <evie@uwueviee.live>")

# Package information
NAME="glibc"
VERSION="2.35"
EPOCH=0
DESC="GNU C Library"
GRPS=("base")
URL="https://www.gnu.org/software/libc/"
LICENSES=("LGPL-2.1")
DEPENDS=("tzdata" "libxcrypt")
OPT_DEPENDS=()
PROVIDES=("glibc")
CONFLICTS=()
REPLACES=()

# Source information
SRC=("https://ftp.gnu.org/gnu/glibc/glibc-${VERSION}.tar.xz"
"https://gitlab.com/yiffos/core/patches/-/raw/main/glibc/fhs-runtime.patch")

SUM_TYPE="sha512"
SUM=("e7336ce27561be5d7c217832a1136fb327e057bd8d3f92925b35c97e3e9f9e486948b5a1e03e5e4090772ef06437a074d10b82e68f17f1ad8f22077ee39e1b66"
"5b24f292cc87a133f45d743a95a8e706884e05ccf68024a0a88c0605c437928e111498feebca0259581da12d1ddb8e24726a67428e590240a1cbae48f7c2cc35")

# Prepare script
function prepare() {
    cd "${WORKDIR}/glibc-${VERSION}"

    mkdir build
    cd    build

    echo "rootsbindir=/usr/sbin" > configparms

    ../configure --prefix=/usr                                       \
                 --disable-werror                                    \
                 --enable-kernel=4.4                                 \
                 --enable-stack-protector=strong                     \
                 --with-headers=/usr/include                         \
                 --with-bugurl=https://yiffos.atlassian.net/jira/    \
                 --enable-add-ons                                    \
                 --enable-bind-now                                   \
                 --enable-cet                                        \
                 --enable-kernel=4.4                                 \
                 --enable-lock-elision                               \
                 --enable-stack-protector=strong                     \
                 --enable-stackguard-randomization                   \
                 --disable-profile                                   \
                 --disable-werror                                    \
                 --libdir=/usr/lib                                   \
                 --libexecdir=/usr/lib                               \
                 --enable-multi-arch                                 \
                 libc_cv_slibdir=/usr/lib  

    echo "slibdir=/usr/lib" >> configparms
    echo "rtlddir=/usr/lib" >> configparms
    echo "sbindir=/usr/bin" >> configparms
    echo "rootsbindir=/usr/bin" >> configparms

    return 0
}

# Build script
function build() {
    cd "${WORKDIR}/glibc-${VERSION}/build"

    make

    # DO NOT SKIP THE CHECK FOR GLIBC though some failures are exptected
    make check || true

    return 0
}

# Post build script
function postbuild() {
    cd "${WORKDIR}/glibc-${VERSION}/build"

    touch ${BUILD_DATA_ROOT}/etc/ld.so.conf

    sed '/test-installation/s@$(PERL)@echo not running@' -i ../Makefile

    DESTDIR="${BUILD_DATA_ROOT}" make install

    sed '/RTLDLIST=/s@/usr@@g' -i ${BUILD_DATA_ROOT}/usr/bin/ldd

    cp -v ../nscd/nscd.conf ${BUILD_DATA_ROOT}/etc/nscd.conf
    mkdir -pv ${BUILD_DATA_ROOT}/var/cache/nscd

    DESTDIR="${BUILD_DATA_ROOT}" make localedata/install-locales

cat > ${BUILD_DATA_ROOT}/etc/nsswitch.conf << "EOF"
# Begin /etc/nsswitch.conf

passwd: files
group: files
shadow: files

hosts: files dns
networks: files

protocols: files
services: files
ethers: files
rpc: files

# End /etc/nsswitch.conf
EOF

cat > ${BUILD_DATA_ROOT}/etc/ld.so.conf << "EOF"
# Begin /etc/ld.so.conf
/usr/local/lib
/opt/lib

EOF

cat >> ${BUILD_DATA_ROOT}/etc/ld.so.conf << "EOF"
# Add an include directory
include /etc/ld.so.conf.d/*.conf

EOF

    mkdir -pv ${BUILD_DATA_ROOT}/etc/ld.so.conf.d

    # We use libxcrypt instead of glibc's libcrypt, delete glibc's libcrypt
    rm ${BUILD_DATA_ROOT}/usr/lib/libcrypt.so.1

    return 0
}