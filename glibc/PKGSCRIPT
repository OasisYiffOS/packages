# Package information
NAME="glibc"
VERSION="2.34"
EPOCH=0
DESC="GNU C Library"
GRPS=()
URL="https://www.gnu.org/software/libc/"
LICENSES=("LGPL-2.1")
DEPENDS=("tzdata")
OPT_DEPENDS=()
PROVIDES=("glibc")
CONFLICTS=()
REPLACES=()

# Source information
SRC=("https://ftp.gnu.org/gnu/glibc/glibc-${VERSION}.tar.xz"
"https://git.yiffos.gay/Core/patches/raw/branch/main/glibc/fhs-runtime.patch")

SUM_TYPE="sha512"
SUM=("15252affd9ef4523a8001db16d497f4fdcb3ddf4cde7fe80e075df0bd3cc6524dc29fbe20229dbf5f97af580556e6b1fac0de321a5fe25322bc3e72f93beb624"
"5b24f292cc87a133f45d743a95a8e706884e05ccf68024a0a88c0605c437928e111498feebca0259581da12d1ddb8e24726a67428e590240a1cbae48f7c2cc35")

# Prepare script
function prepare() {
    cd "${WORKDIR}/glibc-${VERSION}"

    # Fix securtity issue from upstream
    sed -e '/NOTIFY_REMOVED)/s/)/ \&\& data.attr != NULL)/' -i sysdeps/unix/sysv/linux/mq_notify.c

    return 0
}

# Build script
function build() {
    cd "${WORKDIR}/glibc-${VERSION}"

    mkdir build && cd build

    echo "rootsbindir=/usr/sbin" > configparms

    ../configure --prefix=/usr                                              \
            --disable-werror                                                \
            --enable-kernel=4.4                                             \
            --enable-stack-protector=strong                                 \
            --with-headers=/usr/include                                     \
            --with-bugurl=https://git.yiffos.gay/Packaging/packages/issues  \
            --enable-add-ons                                                \
            --enable-bind-now                                               \
            --enable-cet                                                    \
            --enable-kernel=4.4                                             \
            --enable-lock-elision                                           \
            --enable-stack-protector=strong                                 \
            --enable-stackguard-randomization                               \
            --disable-profile                                               \
            --disable-werror                                                \
            --libdir=/usr/lib                                               \
            --libexecdir=/usr/lib

    echo "slibdir=/usr/lib" >> configparms
    echo "rtlddir=/usr/lib" >> configparms
    echo "sbindir=/usr/bin" >> configparms
    echo "rootsbindir=/usr/bin" >> configparms

    make

    # DO NOT SKIP THE CHECK FOR GLIBC though some failures are exptected
    make check || true

    return 0
}

# Post build script
function postbuild() {
    cd "${WORKDIR}/glibc-${VERSION}"

    cd build

    touch ${BUILD_DATA_ROOT}/etc/ld.so.conf

    sed '/test-installation/s@$(PERL)@echo not running@' -i ../Makefile

    DESTDIR="${BUILD_DATA_ROOT}" make install

    sed '/RTLDLIST=/s@/usr@@g' -i ${BUILD_DATA_ROOT}/usr/bin/ldd

    cp -v ../nscd/nscd.conf ${BUILD_DATA_ROOT}/etc/nscd.conf
    mkdir -pv ${BUILD_DATA_ROOT}/var/cache/nscd

    DESTDIR="${BUILD_DATA_ROOT}" make localedata/install-locales

cat > ${BUILD_DATA_ROOT}/etc/nsswitch.conf << "EOF"
# Begin /etc/nsswitch.conf

passwd: files
group: files
shadow: files

hosts: files dns
networks: files

protocols: files
services: files
ethers: files
rpc: files

# End /etc/nsswitch.conf
EOF

cat > ${BUILD_DATA_ROOT}/etc/ld.so.conf << "EOF"
# Begin /etc/ld.so.conf
/usr/local/lib
/opt/lib

EOF

cat >> ${BUILD_DATA_ROOT}/etc/ld.so.conf << "EOF"
# Add an include directory
include /etc/ld.so.conf.d/*.conf

EOF

    mkdir -pv ${BUILD_DATA_ROOT}/etc/ld.so.conf.d

    return 0
}